if (!require(tidyverse)) install.packages('tidyverse')
library(ggplot2)
library(tidyverse)
library("viridis")
df = read_csv('/Users/excenity/Documents/HSIP/Research/Longitudinal PCE/GitHub/Dynamic-DeepHit copy/risk_df_order.csv')
if (!require(tidyverse)) install.packages('tidyverse')
library(ggplot2)
library(tidyverse)
library("viridis")
df = read_csv('/Users/excenity/Documents/HSIP/Research/Longitudinal PCE/GitHub/Dynamic-DeepHit LRPP/AUC + Risk Calculations/risk_df_order.csv')
df$risk_cat_pce = factor(df$risk_cat_pce, levels = c('Low Risk', 'Borderline Risk', 'Intermediate Risk', 'High Risk'))
ggplot(df, aes(x = risk_order_pce, y = risk_order_ddh, color = risk_cat_pce)) + geom_point(alpha = .75) + theme_bw() + geom_abline(color = 'green', linewidth = 1.55) + scale_color_viridis(discrete = T, option = 'C', direction = -1)
df$true_label = as.factor(df$true_label)
df %>% group_by(risk_cat_pce) %>% summarise_at(vars(risk_order_pce), min)
ggplot(df, aes(x = risk_order_pce, y = risk_order_ddh, color = true_label)) + geom_point(alpha = .5) + theme_bw() + geom_abline(color = 'red', linewidth = 1.25) + scale_color_manual(values=c('gray', 'red')) +
geom_vline(xintercept = 1274, color = 'green', linetype = 'dashed') + geom_vline(xintercept = 1642, color = 'yellow', linetype = 'dashed') + geom_vline(xintercept = 2382, color = 'red', linetype = 'dashed')
if (!require(tidyverse)) install.packages('tidyverse')
library(ggplot2)
library(tidyverse)
library("viridis")
df = read_csv('/Users/excenity/Documents/HSIP/Research/Longitudinal PCE/GitHub/Dynamic-DeepHit LRPP/AUC + Risk Calculations/risk_df_order.csv')
df$risk_cat_pce = factor(df$risk_cat_pce, levels = c('Low Risk', 'Borderline Risk', 'Intermediate Risk', 'High Risk'))
ggplot(df, aes(x = risk_order_pce, y = risk_order_ddh, color = risk_cat_pce)) + geom_point(alpha = .75) + theme_bw() + geom_abline(color = 'green', linewidth = 1.55) + scale_color_viridis(discrete = T, option = 'C', direction = -1)
if (!require(tidyverse)) install.packages('tidyverse')
library(ggplot2)
library(tidyverse)
library("viridis")
df = read_csv('/Users/excenity/Documents/HSIP/Research/Longitudinal PCE/GitHub/Dynamic-DeepHit LRPP/AUC + Risk Calculations/risk_df_order.csv')
df$risk_cat_pce = factor(df$risk_cat_pce, levels = c('Low Risk', 'Borderline Risk', 'Intermediate Risk', 'High Risk'))
ggplot(df, aes(x = risk_order_pce, y = risk_order_ddh, color = risk_cat_pce)) + geom_point(alpha = .75) + theme_bw() + geom_abline(color = 'green', linewidth = 1.55) + scale_color_viridis(discrete = T, option = 'C', direction = -1)
df$true_label = as.factor(df$true_label)
df %>% group_by(risk_cat_pce) %>% summarise_at(vars(risk_order_pce), min)
ggplot(df, aes(x = risk_order_pce, y = risk_order_ddh, color = true_label)) + geom_point(alpha = .5) + theme_bw() + geom_abline(color = 'red', linewidth = 1.25) + scale_color_manual(values=c('gray', 'red')) +
geom_vline(xintercept = 1274, color = 'green', linetype = 'dashed') + geom_vline(xintercept = 1642, color = 'yellow', linetype = 'dashed') + geom_vline(xintercept = 2382, color = 'red', linetype = 'dashed')
if (!require(tidyverse)) install.packages('tidyverse')
library(ggplot2)
library(tidyverse)
library("viridis")
df = read_csv('/Users/excenity/Documents/HSIP/Research/Longitudinal PCE/GitHub/Dynamic-DeepHit LRPP/AUC + Risk Calculations/risk_df_order.csv')
df$risk_cat_pce = factor(df$risk_cat_pce, levels = c('Low Risk', 'Borderline Risk', 'Intermediate Risk', 'High Risk'))
ggplot(df, aes(x = risk_order_pce, y = risk_order_ddh, color = risk_cat_pce)) + geom_point(alpha = .75) + theme_bw() + geom_abline(color = 'green', linewidth = 1.55) + scale_color_viridis(discrete = T, option = 'C', direction = -1)
df$true_label = as.factor(df$true_label)
df %>% group_by(risk_cat_pce) %>% summarise_at(vars(risk_order_pce), min)
ggplot(df, aes(x = risk_order_pce, y = risk_order_ddh, color = true_label)) + geom_point(alpha = .5) + theme_bw() + geom_abline(color = 'red', linewidth = 1.25) + scale_color_manual(values=c('gray', 'red')) +
geom_vline(xintercept = 1274, color = 'green', linetype = 'dashed') + geom_vline(xintercept = 1642, color = 'yellow', linetype = 'dashed') + geom_vline(xintercept = 2382, color = 'red', linetype = 'dashed')
if (!require(tidyverse)) install.packages('tidyverse')
library(ggplot2)
library(tidyverse)
library("viridis")
df = read_csv('/Users/excenity/Documents/HSIP/Research/Longitudinal PCE/GitHub/Dynamic-DeepHit LRPP/AUC + Risk Calculations/risk_df_order.csv')
df$risk_cat_pce = factor(df$risk_cat_pce, levels = c('Low Risk', 'Borderline Risk', 'Intermediate Risk', 'High Risk'))
ggplot(df, aes(x = risk_order_pce, y = risk_order_ddh, color = risk_cat_pce)) + geom_point(alpha = .75) + theme_bw() + geom_abline(color = 'green', linewidth = 1.55) + scale_color_viridis(discrete = T, option = 'C', direction = -1)
df$true_label = as.factor(df$true_label)
df %>% group_by(risk_cat_pce) %>% summarise_at(vars(risk_order_pce), min)
ggplot(df, aes(x = risk_order_pce, y = risk_order_ddh, color = true_label)) + geom_point(alpha = .5) + theme_bw() + geom_abline(color = 'red', linewidth = 1.25) + scale_color_manual(values=c('gray', 'red')) +
geom_vline(xintercept = 1274, color = 'green', linetype = 'dashed') + geom_vline(xintercept = 1642, color = 'yellow', linetype = 'dashed') + geom_vline(xintercept = 2382, color = 'red', linetype = 'dashed')
if (!require(tidyverse)) install.packages('tidyverse')
library(ggplot2)
library(tidyverse)
library("viridis")
library(nricens)
library(caret)
library(pROC)
df = read_csv('/Users/excenity/Documents/HSIP/Research/Longitudinal PCE/GitHub/Dynamic-DeepHit LRPP/AUC + Risk Calculations/risk_df_order.csv')
# get data
data = read_csv('/Users/excenity/Documents/HSIP/Research/Longitudinal PCE/GitHub/LRPP Data Prep/LRPP_select.csv')
indecies_test = read_csv('/Users/excenity/Documents/HSIP/Research/Longitudinal PCE/GitHub/LRPP Data Prep/random_index_select.csv')
names(indecies_test) = c('index', 'label', 'study_index')
indecies_test = indecies_test %>% filter(study_index == 'TRUE') %>% distinct(index)
data = data %>% filter(id %in% indecies_test$index) %>% filter(times <= 8)
data_id = data %>% distinct(id)
data_id$id_new = 0:3112
data = inner_join(data, data_id)
data$id = data$id_new
#df = df %>% filter(risk_cat_pce %in% c("Borderline Risk", "Intermediate Risk"))
df$risk_diff = df$value - df$risk
hist(df$risk_diff, breaks = 50)
ggplot(df, aes(x = true_label, y = risk_diff, group = true_label)) + geom_boxplot() + theme_bw() + xlab('ASCVD Event') + ylab('Risk Difference')
df$risk_cat_pce = factor(df$risk_cat_pce, levels = c('Low Risk', 'Borderline Risk', 'Intermediate Risk', 'High Risk'))
df %>% group_by(risk_cat_pce) %>% summarise_at(vars(risk_diff), list(mean, sd))
increase_list = df %>% filter(risk_diff >= 0) %>% distinct(id)
data$change = 'Decrease'
data$change[data$id %in% increase_list$id] = 'Increase'
data$Risk = factor(data$change)
#data = data %>% filter(id %in% df$id)
?geom_smooth
head(data)
hist(data$sbp)
library(gee)
install.pac
install.packages('gee')
library(gee)
head(gee)
View(data_id)
View(data)
table(data$change)
traj_gee = gee(SBP ~ times, family = gaussian, corstr = 'exchangable')
traj_gee = gee(SBP ~ times, data = data, family = gaussian, corstr = 'exchangable')
traj_gee = gee(sbp ~ times, data = data, family = gaussian, corstr = 'exchangable')
traj_gee = gee(sbp ~ times, data = data, family = gaussian, corstr = 'exchangeable')
library(ggeffects)
install.packages(ggeffects)
install.packages(ggeffects)
install.packages('ggeffects')
library(ggeffects)
ggemmeans(traj_gee, terms = c('sbp', 'times'))
head(dbp)
head(data)
traj_gee = gee(sbp ~ times + change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
ggemmeans(traj_gee, terms = c('sbp', 'times'), condition = c(change = 'increase'))
summary(traj_gee)
plot(traj_gee)
ggemmeans(traj_gee, terms = c('sbp', 'times'), condition = c(change = 'increase'))
traj_gee = gee(sbp ~ times + change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
ggemmeans(traj_gee, terms = c('sbp', 'times'), condition = c(change = 'increase'))
library(geepack)
if (!require(tidyverse)) install.packages('tidyverse')
library(ggplot2)
library(tidyverse)
library("viridis")
library(nricens)
library(caret)
library(pROC)
library(geepack)
traj_gee = geeglm(sbp ~ times + change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
ggemmeans(traj_gee, terms = c('sbp', 'times'), condition = c(change = 'increase'))
plot(traj_gee)
traj_gee = geeglm(sbp ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
ggemmeans(traj_gee, terms = c('sbp', 'times'), condition = c(change = 'increase'))
plot(traj_gee)
ggeffect(traj_gee, terms = c('sbp', 'times'), condition = c(change = 'increase'))
plot(traj_gee)
ggemmeans(traj_gee, terms = c('sbp', 'times'))
summary(traj_gee)
ggemmeans(traj_gee, terms = c('sbp', 'times')) %>% plot()
ggemmeans(traj_gee, terms = c('times')) %>% plot()
ggemmeans(traj_gee, terms = c('times', 'change')) %>% plot()
ggemmeans(traj_gee, terms = c('times', 'change')) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP')
ggemmeans(traj_gee, terms = c('times', 'change')) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') %>% plot()
ggemmeans(traj_gee, terms = c('times', 'change'))#  + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') %>% plot()
ggemmeans(traj_gee, terms = c('times', 'change')) %>% plot()#  + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') %>% plot()
ggemmeans(traj_gee, terms = c('times', 'change')) %>% plot()  + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') %>% plot()
ggemmeans(traj_gee, terms = c('times', 'change'))  + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') %>% plot()
ggemmeans(traj_gee, terms = c('times', 'change')) + ggplot2::ggtitle('SBP') %>% plot()
ggemmeans(traj_gee, terms = c('times', 'change')) + ggplot2::ggtitle('SBP') #%>% plot()
ggemmeans(traj_gee, terms = c('times', 'change')) %>% plot()
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times')
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::ggtitle('SBP Trajectories') + ggplot2::theme(legend.position = "none")
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::ggtitle('SBP Trajectories')
# SBP
traj_gee = geeglm(sbp ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::ggtitle('SBP Trajectories')
# DBP
traj_gee = geeglm(dbp ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::ggtitle('SBP Trajectories')
# Total Cholesterol
traj_gee = geeglm(chol ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::ggtitle('SBP Trajectories')
# HDL
traj_gee = geeglm(hdl ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::ggtitle('SBP Trajectories')
# SBP
traj_gee = geeglm(sbp ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::ggtitle('SBP Trajectories')
# DBP
traj_gee = geeglm(dbp ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::ggtitle('DBP Trajectories')
# Total Cholesterol
traj_gee = geeglm(chol ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::ggtitle('Total Cholesterol Trajectories')
# HDL
traj_gee = geeglm(hdl ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::ggtitle('HDL Trajectories')
head(data)
# SBP
traj_gee = geeglm(sbp ~ times + times*label, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'label'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::ggtitle('SBP Trajectories')
# DBP
traj_gee = geeglm(dbp ~ times + times*label, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'label'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::ggtitle('DBP Trajectories')
# Total Cholesterol
traj_gee = geeglm(chol ~ times + times*label, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'label'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::ggtitle('Total Cholesterol Trajectories')
# HDL
traj_gee = geeglm(hdl ~ times + times*label, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'label'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::ggtitle('HDL Trajectories')
# SBP
traj_gee = geeglm(sbp ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::theme(legend.position = "none")# + ggplot2::ggtitle('SBP Trajectories')
# DBP
traj_gee = geeglm(dbp ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('DBP') + ggplot2::theme(legend.position = "none") #+ ggplot2::ggtitle('DBP Trajectories')
# Total Cholesterol
traj_gee = geeglm(chol ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('Total Cholesterol') + ggplot2::theme(legend.position = "none") #+ ggplot2::ggtitle('Total Cholesterol Trajectories')
# HDL
traj_gee = geeglm(hdl ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('HDL Cholesterol') + ggplot2::theme(legend.position = "none") #+ ggplot2::ggtitle('HDL Trajectories')
# SBP
traj_gee = geeglm(sbp ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('SBP') + ggplot2::theme(legend.position = "none") + ggplot2::ggtitle('')
# DBP
traj_gee = geeglm(dbp ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('DBP') + ggplot2::theme(legend.position = "none") + ggplot2::ggtitle('')
# Total Cholesterol
traj_gee = geeglm(chol ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('Total Cholesterol') + ggplot2::theme(legend.position = "none") + ggplot2::ggtitle('')
# HDL
traj_gee = geeglm(hdl ~ times + times*change, data = data, id = id, family = gaussian, corstr = 'exchangeable')
summary(traj_gee)
plot(ggemmeans(traj_gee, terms = c('times', 'change'))) + ggplot2::xlab('Exam Times') + ggplot2::ylab('HDL Cholesterol') + ggplot2::theme(legend.position = "none") + ggplot2::ggtitle('')
